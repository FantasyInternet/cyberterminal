(module
  (import "api" "fillRect" (func $fillRect (param i32) (param i32) (param i32) (param i32) (param i32) (param i32) (param i32)))

  (global $x (mut i32) (i32.const 0))
  (global $y (mut i32) (i32.const 0))
  (global $r (mut i32) (i32.const 0))
  (global $g (mut i32) (i32.const 0))
  (global $b (mut i32) (i32.const 0))
  (global $dx (mut i32) (i32.const 0))
  (global $dy (mut i32) (i32.const 0))
  (global $dr (mut i32) (i32.const 0))
  (global $dg (mut i32) (i32.const 0))
  (global $db (mut i32) (i32.const 0))
  (func $init
  )
  (export "init" (func $init))
  (func $step
    (set_global $x (i32.add (get_global $x) (get_global $dx)))
    (set_global $y (i32.add (get_global $y) (get_global $dy)))
    (set_global $r (i32.add (get_global $r) (get_global $dr)))
    (set_global $g (i32.add (get_global $g) (get_global $dg)))
    (set_global $b (i32.add (get_global $b) (get_global $db)))
    (if (i32.le_u (get_global $x) (i32.const 0))
      (then        (set_global $dx (i32.const 1))      )    )
    (if (i32.le_u (get_global $y) (i32.const 0))
      (then        (set_global $dy (i32.const 1))      )    )
    (if (i32.le_u (get_global $r) (i32.const 0))
      (then        (set_global $dr (i32.const 1))      )    )
    (if (i32.le_u (get_global $g) (i32.const 0))
      (then        (set_global $dg (i32.const 2))      )    )
    (if (i32.le_u (get_global $b) (i32.const 0))
      (then        (set_global $db (i32.const 3))      )    )
    (if (i32.ge_u (get_global $x) (i32.const 312))
      (then        (set_global $dx (i32.const -1))      )    )
    (if (i32.ge_u (get_global $y) (i32.const 190))
      (then        (set_global $dy (i32.const -1))      )    )
    (if (i32.ge_u (get_global $r) (i32.const 255))
      (then        (set_global $dr (i32.const -1))      )    )
    (if (i32.ge_u (get_global $g) (i32.const 255))
      (then        (set_global $dg (i32.const -1))      )    )
    (if (i32.ge_u (get_global $b) (i32.const 255))
      (then        (set_global $db (i32.const -1))      )    )
    (call $fillRect (get_global $x) (get_global $y) (i32.const 2) (i32.const 2) (get_global $r) (get_global $g) (get_global $b))
  )
  (export "step" (func $step))
)