include "fantasyinternet.poem/log.poem"
include "fantasyinternet.poem/display.poem"
include "fantasyinternet.poem/filesystem.poem"
include "fantasyinternet.poem/cli.poem"
include "fantasyinternet.poem/text_input.poem"
include "fantasyinternet.poem/navigation.poem"

var old_boot
var new_boot
var old_boot_req
var new_boot_req
export "init" init
  set_display_mode 0 80 20
  read "./history.txt" #load_history
  old_boot_req = read "./boot.wasm" #update
  new_boot_req = read "./updates/cyberterminal.wasm" #update

var stage = 0
export "step" step
  if stage == 0
    intro
  elsif stage == 1
    var url
    if (url = read_line) != null
      connect_to url
      write "./history.txt" (array_join history "\n") #state_success
      stage++
  else
    shutdown

func intro ~ ℂ𝕪𝕓𝕖𝕣𝕋𝕖𝕣𝕞𝕚𝕟𝕒𝕝
  println "\u001b[K\u001b[H\u001b[1m\n\n\t\t\t\t \u001b[35mℂ𝕪\u001b[31m𝕓𝕖𝕣\u001b[33m𝕋𝕖𝕣\u001b[32m𝕞𝕚𝕟\u001b[36m𝕒𝕝\u001b[0;1m\n\n"
  print "\u001b[K\n\u001b[A\u001b[1;37m  Connect to: \u001b[0m\u001b[s\t\t\t\t\t\t\t\t    ⇧⇩\u001b[u"
  set_input_type 4
  set_input_text "http://"
  set_input_position 7
  stage++

func load_history success data req_id
  if success
    history = string_split data "\n"
    ~ if (array_search history "http://cybermicro.online/") == null
    ~   array_push history "http://cybermicro.online/"
  else
    history =
      "https://fantasyinternet.github.io/"
      ~ "http://cybermicro.online/"
  history_pos = (array_length history) - 1
  var url = history[history_pos]
  set_input_text url
  set_input_position string_length url

func update success data req_id
  if req_id == old_boot_req
    old_boot = data
  if req_id == new_boot_req
    new_boot = data
  if old_boot && new_boot && (old_boot != new_boot)
    println "\n\n\nUpdating..."
    write "./boot.wasm" new_boot #shutdown_on_success

func state_success success req_id
  if success
    log "Success!"
  else
    log "Error!"

func shutdown_on_success success req_id
  if success
    shutdown
